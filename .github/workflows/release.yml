name: "C++ CI"

on:
  push:
    branches:
      - master
      - feature/github_actions

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1.10

      - name: Cache Boost
        id: cache-boost
        uses: actions/cache@v2
        with:
          path: C:\local\boost_1_81_0
          key: boost-${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt') }}-1.81.0
          restore-keys: |
            boost-${{ runner.os }}-

      - name: Install Boost unit_test_framework
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          curl -LO https://boostorg.jfrog.io/artifactory/main/release/1.81.0/source/boost_1_81_0.zip
          tar -xf boost_1_81_0.zip -C C:\local
          cd C:\local\boost_1_81_0
          bootstrap
          .\b2 --with-test install

      - name: Configure CMake
        run: cmake -S . -B build -DCPACK_PACKAGE_VERSION=${{ github.run_number }}

      - name: List build directory
        run: dir build

      - name: Build project
        run: cmake --build build --target ALL_BUILD

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

      - name: Package with CPack
        run: cmake --build build --target package

      - name: List build directory
        run: dir build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/IPParser-1.0.${{ github.run_number }}-win64.exe
          asset_name: IPParser-1.0.${{ github.run_number }}-win64.exe
          asset_content_type: application/vnd.microsoft.portable-executable
