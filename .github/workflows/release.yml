name: "C++ CI"

on:
  push:
    branches:
      - master
      - feature/github_actions

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1.10

      - name: Install dependencies
        run: |
          choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System'

      - name: Install boost
        uses: MarkusJx/install-boost@v2.4.5
        id: install-boost
        with:
          # REQUIRED: Specify the required boost version
          # A list of supported versions can be found here:
          # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
          boost_version: 1.84.0
          # OPTIONAL: Specify a toolset
          toolset: msvc
          # OPTIONAL: Specify a custon install location
          # boost_install_dir: C:\some_directory
          # OPTIONAL: Specify a platform version
          platform_version: 2022

          # NOTE: If a boost version matching all requirements cannot be found,
          # this build step will fail

      - name: Configure CMake
        run: cmake -S . -B build -DCPACK_PACKAGE_VERSION=${{ github.run_number }}

      - name: List build directory
        run: dir build

      - name: Build project
        run: cmake --build build --target ALL_BUILD

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

      - name: Package with CPack
        run: cmake --build build --target package

      - name: List build directory
        run: dir build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/IPParser-1.0.${{ github.run_number }}-win64.exe
          asset_name: IPParser-1.0.${{ github.run_number }}-win64.exe
          asset_content_type: application/vnd.microsoft.portable-executable
